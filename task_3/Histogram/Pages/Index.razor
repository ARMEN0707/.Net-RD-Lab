@page "/"

@using task_3;
@using Syncfusion.Blazor.Charts
@using Histogram.Models

<input @bind="@FirstNumber" />
<input @bind="@SecondNumber" />
<button @onclick="CreateHistogram" form="/">Начать</button>

@if (IsCreate)
{
    IsCreate = false;
    <div>Результат: @Result</div>
    <SfChart >
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" />

        <ChartSeriesCollection>
            <ChartSeries DataSource="@Data" XName="Label" YName="Time" Type="ChartSeriesType.Column">
                <ChartMarker>
                    <ChartDataLabel Visible="true" Position="Syncfusion.Blazor.Charts.LabelPosition.Middle" />
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </SfChart>
}
else
{
    <Error Message="@Message" />
}


@code
{
    public EuclideanAlgorithm EuclideanAlgorithm;
    public List<HistogramColumn> Data;
    public int FirstNumber;
    public int SecondNumber;
    public bool IsCreate = false;
    public int Result;
    public string Message;


    public void CreateHistogram()
    {
        long time;

        try
        {
            Data = new List<HistogramColumn>();
            EuclideanAlgorithm = new EuclideanAlgorithm();

            Result = EuclideanAlgorithm.FindGreatestCommonDivisorBinaryAlgorithm(FirstNumber, SecondNumber, out time);
            Data.Add(new HistogramColumn("Euclidean algorithm", time));

            EuclideanAlgorithm.FindGreatestCommonDivisor(FirstNumber, SecondNumber, out time);
            Data.Add(new HistogramColumn("Euclidean binary algorithm", time));

            IsCreate = true;

        }
        catch (Exception exception)
        {
            IsCreate = false;
            Message = exception.Message;
        }
    }
}
